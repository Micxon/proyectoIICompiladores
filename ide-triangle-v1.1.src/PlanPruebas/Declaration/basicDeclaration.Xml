<?xml version="1.0" standalone="yes"?>
<Program>
<LetCommand>
<SequentialDeclaration>
<SequentialDeclaration>
<SequentialDeclaration>
<SequentialDeclaration>
<SequentialDeclaration>
<SequentialDeclaration>
<CompoundSingleDeclaration>
<VarInitDeclaration>
<Identifier value="nombre"/>
<CharacterExpression>
<CharacterLiteral value="'A'"/>
</CharacterExpression>
</VarInitDeclaration>
</CompoundSingleDeclaration>
<CompoundSingleDeclaration>
<VarDeclaration>
<Identifier value="apellido"/>
<SimpleTypeDenoter>
<Identifier value="string"/>
</SimpleTypeDenoter>
</VarDeclaration>
</CompoundSingleDeclaration>
</SequentialDeclaration>
<CompoundSingleDeclaration>
<TypeDeclaration>
<Identifier value="edad"/>
<SimpleTypeDenoter>
<Identifier value="Integer"/>
</SimpleTypeDenoter>
</TypeDeclaration>
</CompoundSingleDeclaration>
</SequentialDeclaration>
<CompoundSingleDeclaration>
<ConstDeclaration>
<Identifier value="isBig"/>
<IfExpression>
<BinaryExpression>
<IntegerExpression>
<IntegerLiteral value="2"/>
</IntegerExpression>
<Operator value="&lt;"/>
<IntegerExpression>
<IntegerLiteral value="5"/>
</IntegerExpression>
</BinaryExpression>
<CharacterExpression>
<CharacterLiteral value="'T'"/>
</CharacterExpression>
<CharacterExpression>
<CharacterLiteral value="'F'"/>
</CharacterExpression>
</IfExpression>
</ConstDeclaration>
</CompoundSingleDeclaration>
</SequentialDeclaration>
<CompoundSingleDeclaration>
<ProcDeclaration>
<Identifier value="setOne"/>
<SingleFormalParameterSequence>
<ConstFormalParameter>
<Identifier value="n"/>
<SimpleTypeDenoter>
<Identifier value="Integer"/>
</SimpleTypeDenoter>
</ConstFormalParameter>
</SingleFormalParameterSequence>
<AssignCommand>
<SimpleVname>
<Identifier value="n"/>
</SimpleVname>
<IntegerExpression>
<IntegerLiteral value="1"/>
</IntegerExpression>
</AssignCommand>
</ProcDeclaration>
</CompoundSingleDeclaration>
</SequentialDeclaration>
<CompoundSingleDeclaration>
<FuncDeclaration>
<Identifier value="getNombre"/>
<EmptyFormalParameterSequence/>
<SimpleTypeDenoter>
<Identifier value="string"/>
</SimpleTypeDenoter>
<CharacterExpression>
<CharacterLiteral value="'A'"/>
</CharacterExpression>
</FuncDeclaration>
</CompoundSingleDeclaration>
</SequentialDeclaration>
<LocalDeclaration>
<SequentialDeclaration>
<CompoundSingleDeclaration>
<VarInitDeclaration>
<Identifier value="i"/>
<VnameExpression>
<SimpleVname>
<Identifier value="integer"/>
</SimpleVname>
</VnameExpression>
</VarInitDeclaration>
</CompoundSingleDeclaration>
<CompoundSingleDeclaration>
<ConstDeclaration>
<Identifier value="pi"/>
<IntegerExpression>
<IntegerLiteral value="314"/>
</IntegerExpression>
</ConstDeclaration>
</CompoundSingleDeclaration>
</SequentialDeclaration>
<SequentialDeclaration>
<CompoundSingleDeclaration>
<VarInitDeclaration>
<Identifier value="i"/>
<IntegerExpression>
<IntegerLiteral value="13"/>
</IntegerExpression>
</VarInitDeclaration>
</CompoundSingleDeclaration>
<CompoundSingleDeclaration>
<FuncDeclaration>
<Identifier value="isSame"/>
<EmptyFormalParameterSequence/>
<SimpleTypeDenoter>
<Identifier value="string"/>
</SimpleTypeDenoter>
<IfExpression>
<BinaryExpression>
<VnameExpression>
<SimpleVname>
<Identifier value="i"/>
</SimpleVname>
</VnameExpression>
<Operator value="&lt;"/>
<VnameExpression>
<SimpleVname>
<Identifier value="pi"/>
</SimpleVname>
</VnameExpression>
</BinaryExpression>
<CharacterExpression>
<CharacterLiteral value="'T'"/>
</CharacterExpression>
<CharacterExpression>
<CharacterLiteral value="'F'"/>
</CharacterExpression>
</IfExpression>
</FuncDeclaration>
</CompoundSingleDeclaration>
</SequentialDeclaration>
</LocalDeclaration>
</SequentialDeclaration>
<AssignCommand>
<SimpleVname>
<Identifier value="a"/>
</SimpleVname>
<IntegerExpression>
<IntegerLiteral value="2555"/>
</IntegerExpression>
</AssignCommand>
</LetCommand>
</Program>
